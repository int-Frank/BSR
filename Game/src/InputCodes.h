#ifndef INPUTCODES_H
#define INPUTCODES_H

#include "Utility.h"

#define KM_CTRL   (KM_LCTRL|KM_RCTRL)
#define KM_SHIFT  (KM_LSHIFT|KM_RSHIFT)
#define KM_ALT    (KM_LALT|KM_RALT)
#define KM_GUI    (KM_LGUI|KM_RGUI)

enum KeyMod
{
  KM_NONE   = 0,
  KM_LSHIFT = BIT(16),
  KM_RSHIFT = BIT(17),
  KM_LCTRL  = BIT(18),
  KM_RCTRL  = BIT(19),
  KM_LALT   = BIT(20),
  KM_RALT   = BIT(21),
  KM_LGUI   = BIT(22),
  KM_RGUI   = BIT(23),
  KM_NUM    = BIT(24),
  KM_CAPS   = BIT(25),
  KM_MODE   = BIT(26),
};

enum InputCode
{
  IC_UNKNOWN = 0,

  IC_RETURN = '\r',
  IC_ESCAPE = '\033',
  IC_BACKSPACE = '\b',
  IC_TAB = '\t',
  IC_SPACE = ' ',
  IC_EXCLAIM = '!',
  IC_QUOTEDBL = '"',
  IC_HASH = '#',
  IC_PERCENT = '%',
  IC_DOLLAR = '$',
  IC_AMPERSAND = '&',
  IC_QUOTE = '\'',
  IC_LEFTPAREN = '(',
  IC_RIGHTPAREN = ')',
  IC_ASTERISK = '*',
  IC_PLUS = '+',
  IC_COMMA = ',',
  IC_MINUS = '-',
  IC_PERIOD = '.',
  IC_SLASH = '/',
  IC_0 = '0',
  IC_1 = '1',
  IC_2 = '2',
  IC_3 = '3',
  IC_4 = '4',
  IC_5 = '5',
  IC_6 = '6',
  IC_7 = '7',
  IC_8 = '8',
  IC_9 = '9',
  IC_COLON = ':',
  IC_SEMICOLON = ';',
  IC_LESS = '<',
  IC_EQUALS = '=',
  IC_GREATER = '>',
  IC_QUESTION = '?',
  IC_AT = '@',
  IC_LEFTBRACKET = '[',
  IC_BACKSLASH = '\\',
  IC_RIGHTBRACKET = ']',
  IC_CARET = '^',
  IC_UNDERSCORE = '_',
  IC_BACKQUOTE = '`',
  IC_a = 'a',
  IC_b = 'b',
  IC_c = 'c',
  IC_d = 'd',
  IC_e = 'e',
  IC_f = 'f',
  IC_g = 'g',
  IC_h = 'h',
  IC_i = 'i',
  IC_j = 'j',
  IC_k = 'k',
  IC_l = 'l',
  IC_m = 'm',
  IC_n = 'n',
  IC_o = 'o',
  IC_p = 'p',
  IC_q = 'q',
  IC_r = 'r',
  IC_s = 's',
  IC_t = 't',
  IC_u = 'u',
  IC_v = 'v',
  IC_w = 'w',
  IC_x = 'x',
  IC_y = 'y',
  IC_z = 'z',
  IC_DELETE = '\177',

  IC_CAPSLOCK = 128,

  IC_F1,
  IC_F2,
  IC_F3,
  IC_F4,
  IC_F5,
  IC_F6,
  IC_F7,
  IC_F8,
  IC_F9,
  IC_F10,
  IC_F11,
  IC_F12,

  IC_PRINTSCREEN,
  IC_SCROLLLOCK,
  IC_PAUSE,
  IC_INSERT,
  IC_HOME,
  IC_PAGEUP,
  IC_END,
  IC_PAGEDOWN,
  IC_RIGHT,
  IC_LEFT,
  IC_DOWN,
  IC_UP,

  IC_NUMLOCKCLEAR,
  IC_KP_DIVIDE,
  IC_KP_MULTIPLY,
  IC_KP_MINUS,
  IC_KP_PLUS,
  IC_KP_ENTER,
  IC_KP_1,
  IC_KP_2,
  IC_KP_3,
  IC_KP_4,
  IC_KP_5,
  IC_KP_6,
  IC_KP_7,
  IC_KP_8,
  IC_KP_9,
  IC_KP_0,
  IC_KP_PERIOD,

  IC_KP_EQUALS,
  IC_F13,
  IC_F14,
  IC_F15,
  IC_F16,
  IC_F17,
  IC_F18,
  IC_F19,
  IC_F20,
  IC_F21,
  IC_F22,
  IC_F23,
  IC_F24,
  IC_KP_COMMA,

  IC_LCTRL,
  IC_LSHIFT,
  IC_LALT,
  IC_LGUI,
  IC_RCTRL,
  IC_RSHIFT,
  IC_RALT,
  IC_RGUI,

  //----------------------------------------------------------------------------------
  // Mouse
  //----------------------------------------------------------------------------------
  IC_MOUSEBUTTON_LEFT    = 256,
  IC_MOUSEBUTTON_MIDDLE,
  IC_MOUSEBUTTON_RIGHT,
  IC_MOUSEBUTTON_X1,
  IC_MOUSEBUTTON_X2,
  IC_MOUSEWHEEL_UP,
  IC_MOUSEWHEEL_DOWN,
  IC_MOUSE_MOTION
};

#endif